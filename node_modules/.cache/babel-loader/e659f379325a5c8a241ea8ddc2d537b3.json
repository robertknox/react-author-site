{"ast":null,"code":"var _jsxFileName = \"/home/robert/software/react-julia/julia/src/components/Contact/Contact.js\";\nimport React, { useState } from \"react\";\nimport styled, { createGlobalStyle, css } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n  }\n\n  body {\n    font-family:Arial, Helvetica, sans-serif;\n    background: linear-gradient(to buttom, #f05055,#e1eec5);\n    height: 100%;\n    margin: 0;\n    color: #555;\n  }\n`;\nconst sharedStyles = css`\n  background-color: #eee;\n  height: 40px;\n  border-radius: 5px;\n  borderL 1px solid #ddd;\n  margin: 10px 0 20px 0;\n  padding: 20px;\n  box-sizing: border-box`;\nconst StyledFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vt;\n  padding: 0 20px;\n`;\nconst StyledForm = styled.form`\n  width: 100%;\n  max-width: 700px;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\n`;\nconst StyledInput = styled.input`\n  display: block;\n  width: 100%;\n  ${sharedStyles}\n`;\nconst StyledTextArea = styled.textarea`\n  background-color: #eee;\n  width: 100%;\n  min-height: 100px;\n  resizeL none;\n  ${sharedStyles}\n  `;\nconst StyledButton = styled.button`\n  displayL block;\n  background-color: #f7779d;\n  font-size:.9rem;\n  border: 0;\n  border-radiusL 5ps;\n  height: 40px;\n  padding: 0 20px;\n  cursor: pointer;\n  box-sizeing: border-box;\n  `;\nconst StyledFieldSet = styled.fieldset`\n  border: 1px solid #ddd;\n  border-radius: 5x;\n  padding: 10px;\n  margin: 20px 0;\n  \n    legend { \n      padding: 0 10px;\n    }\n\n    label {\n      padding-right: 20px;\n    }\n\n    input {\n      margin-right: 10px;\n    }\n\n  }`;\nconst StyledError = styled.div`\n  color: red;\n  font-weightL 800;\n  margin: 0 0 40px 0;\n`;\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"test\",\n      email: \"test\",\n      message: \"test\",\n      gender: \"female\"\n    };\n    this.error = \"\";\n\n    this.handleInputChange = e => {\n      console.log(\"handleInputChange:\" + e.currentTarget.value);\n      const inputName = e.currentTarget.name;\n      const inputValue = e.currentTarget.value;\n      this.setState(prev => ({ ...prev,\n        [inputName]: inputValue\n      }));\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\" + e.currentTarget);\n      e.preventDefault();\n      const {\n        name,\n        email,\n        subject,\n        message\n      } = this.state;\n      Email.send({\n        Host: \"smtp.gmail.com\",\n        Username: \"robertselkirkknox-programmer@gamil.com\",\n        Password: \"Joaquim1Julia2\",\n        To: \"robertselkirkknox@yahoo.com\",\n        From: \"test@test.com\",\n        Subject: \"<email subject>\",\n        Body: \"<email body>\"\n      }).then(message => alert(\"mail sent successfully\"));\n      this.resetForm();\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      gender: \"female\"\n    };\n  }\n\n  resetForm() {\n    this.setState({\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StyledFormWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StyledForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(StyledInput, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(StyledInput, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StyledFieldSet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"female\",\n      name: \"gender\",\n      checked: this.state.gender === \"female\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }), \"Female\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"male\",\n      name: \"gender\",\n      checked: this.state.gender === \"male\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }), \"Male\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(StyledTextArea, {\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }), this.error && /*#__PURE__*/React.createElement(StyledError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \" \", this.error)), /*#__PURE__*/React.createElement(StyledButton, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, \"Send Message\"))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/robert/software/react-julia/julia/src/components/Contact/Contact.js"],"names":["React","useState","styled","createGlobalStyle","css","GlobalStyle","sharedStyles","StyledFormWrapper","div","StyledForm","form","StyledInput","input","StyledTextArea","textarea","StyledButton","button","StyledFieldSet","fieldset","StyledError","Contact","Component","constructor","props","state","name","email","message","gender","error","handleInputChange","e","console","log","currentTarget","value","inputName","inputValue","setState","prev","handleSubmit","preventDefault","subject","Email","send","Host","Username","Password","To","From","Subject","Body","then","alert","resetForm","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled, { createGlobalStyle, css } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n  }\n\n  body {\n    font-family:Arial, Helvetica, sans-serif;\n    background: linear-gradient(to buttom, #f05055,#e1eec5);\n    height: 100%;\n    margin: 0;\n    color: #555;\n  }\n`;\n\nconst sharedStyles = css`\n  background-color: #eee;\n  height: 40px;\n  border-radius: 5px;\n  borderL 1px solid #ddd;\n  margin: 10px 0 20px 0;\n  padding: 20px;\n  box-sizing: border-box`;\n\nconst StyledFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vt;\n  padding: 0 20px;\n`;\n\nconst StyledForm = styled.form`\n  width: 100%;\n  max-width: 700px;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\n`;\n\nconst StyledInput = styled.input`\n  display: block;\n  width: 100%;\n  ${sharedStyles}\n`;\n\nconst StyledTextArea = styled.textarea`\n  background-color: #eee;\n  width: 100%;\n  min-height: 100px;\n  resizeL none;\n  ${sharedStyles}\n  `;\n\nconst StyledButton = styled.button`\n  displayL block;\n  background-color: #f7779d;\n  font-size:.9rem;\n  border: 0;\n  border-radiusL 5ps;\n  height: 40px;\n  padding: 0 20px;\n  cursor: pointer;\n  box-sizeing: border-box;\n  `;\n\nconst StyledFieldSet = styled.fieldset`\n  border: 1px solid #ddd;\n  border-radius: 5x;\n  padding: 10px;\n  margin: 20px 0;\n  \n    legend { \n      padding: 0 10px;\n    }\n\n    label {\n      padding-right: 20px;\n    }\n\n    input {\n      margin-right: 10px;\n    }\n\n  }`;\n\nconst StyledError = styled.div`\n  color: red;\n  font-weightL 800;\n  margin: 0 0 40px 0;\n`;\n\nclass Contact extends React.Component {\n  state = {\n    name: \"test\",\n    email: \"test\",\n    message: \"test\",\n    gender: \"female\",\n  };\n\n  error = \"\";\n\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", email: \"\", message: \"\", gender: \"female\" };\n  }\n\n  resetForm() {\n    this.setState({\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n    });\n  }\n\n  handleInputChange = (e) => {\n    console.log(\"handleInputChange:\" + e.currentTarget.value);\n    const inputName = e.currentTarget.name;\n    const inputValue = e.currentTarget.value;\n    this.setState((prev) => ({ ...prev, [inputName]: inputValue }));\n  };\n\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\" + e.currentTarget);\n    e.preventDefault();\n\n    const { name, email, subject, message } = this.state;\n\n    Email.send({\n      Host: \"smtp.gmail.com\",\n      Username: \"robertselkirkknox-programmer@gamil.com\",\n      Password: \"Joaquim1Julia2\",\n      To: \"robertselkirkknox@yahoo.com\",\n      From: \"test@test.com\",\n      Subject: \"<email subject>\",\n      Body: \"<email body>\",\n    }).then((message) => alert(\"mail sent successfully\"));\n\n    this.resetForm();\n  };\n\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <StyledFormWrapper>\n          <StyledForm>\n            <h1>Contact</h1>\n            <label htmlFor=\"name\">Name</label>\n            <StyledInput\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor=\"email\">Email</label>\n            <StyledInput\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleInputChange}\n            />\n            <StyledFieldSet>\n              <legend>Gender</legend>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"female\"\n                  name=\"gender\"\n                  checked={this.state.gender === \"female\"}\n                  onChange={this.handleInputChange}\n                />\n                Female\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"male\"\n                  name=\"gender\"\n                  checked={this.state.gender === \"male\"}\n                  onChange={this.handleInputChange}\n                />\n                Male\n              </label>\n            </StyledFieldSet>\n            <label htmlFor=\"message\">Message</label>\n            <StyledTextArea\n              name=\"message\"\n              value={this.state.message}\n              onChange={this.handleInputChange}\n            />\n            {this.error && (\n              <StyledError>\n                <p> {this.error}</p>\n              </StyledError>\n            )}\n            <StyledButton type=\"submit\" onClick={this.handleSubmit}>\n              Send Message\n            </StyledButton>\n          </StyledForm>\n        </StyledFormWrapper>\n      </>\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}